// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                Int                 @id @default(autoincrement())
  email             String              @unique
  passwordHash      String
  firstName         String
  lastName          String
  phone             String?
  role              UserRole            @default(USER)
  language          Language            @default(SPANISH)
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  properties        Property[]          @relation("PropertyOwner")
  favorites         Favorite[]
  savedSearches     SavedSearch[]
  messages          Message[]           @relation("MessageSender")
  receivedMessages  Message[]           @relation("MessageReceiver")
}

model Property {
  id               Int              @id @default(autoincrement())
  title            String
  titleEn          String?          // English title
  description      String
  descriptionEn    String?          // English description
  price            Float
  currency         Currency         @default(MXN)
  type             PropertyType
  status           PropertyStatus   @default(ACTIVE)
  bedrooms         Int?
  bathrooms        Int?
  buildingSize     Float?           // square meters
  landSize         Float?           // square meters
  constructionYear Int?
  ownerId          Int
  owner            User             @relation("PropertyOwner", fields: [ownerId], references: [id])
  address          Address?
  features         PropertyFeature[]
  media            Media[]
  favorites        Favorite[]
  views            Int              @default(0)
  verified         Boolean          @default(false)
  createdAt        DateTime         @default(now())
  updatedAt        DateTime         @updatedAt
}

model Address {
  id              Int       @id @default(autoincrement())
  street          String?
  streetNumber    String?
  neighborhood    String
  postalCode      String?
  city            String
  state           State
  latitude        Float?
  longitude       Float?
  propertyId      Int       @unique
  property        Property   @relation(fields: [propertyId], references: [id], onDelete: Cascade)
}

model PropertyFeature {
  id         Int      @id @default(autoincrement())
  name       String
  nameEn     String?  // English name
  propertyId Int
  property   Property @relation(fields: [propertyId], references: [id], onDelete: Cascade)

  @@unique([propertyId, name])
}

model Media {
  id         Int       @id @default(autoincrement())
  type       MediaType
  url        String
  propertyId Int
  property   Property  @relation(fields: [propertyId], references: [id], onDelete: Cascade)
  isMain     Boolean   @default(false)
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}

model Favorite {
  id         Int      @id @default(autoincrement())
  userId     Int
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  propertyId Int
  property   Property @relation(fields: [propertyId], references: [id], onDelete: Cascade)
  createdAt  DateTime @default(now())

  @@unique([userId, propertyId])
}

model SavedSearch {
  id        Int      @id @default(autoincrement())
  name      String
  filters   Json     // Stored search parameters
  userId    Int
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Message {
  id           Int      @id @default(autoincrement())
  content      String
  senderId     Int
  sender       User     @relation("MessageSender", fields: [senderId], references: [id])
  receiverId   Int
  receiver     User     @relation("MessageReceiver", fields: [receiverId], references: [id])
  isRead       Boolean  @default(false)
  createdAt    DateTime @default(now())
}

enum UserRole {
  USER
  AGENT
  ADMIN
}

enum Language {
  SPANISH
  ENGLISH
}

enum PropertyType {
  HOUSE
  APARTMENT
  LAND
  COMMERCIAL
}

enum PropertyStatus {
  ACTIVE
  SOLD
  RENTED
  INACTIVE
}

enum MediaType {
  IMAGE
  FLOOR_PLAN
  VIDEO
}

enum Currency {
  MXN
  USD
}

enum State {
  AGUASCALIENTES
  BAJA_CALIFORNIA
  BAJA_CALIFORNIA_SUR
  CAMPECHE
  CHIAPAS
  CHIHUAHUA
  COAHUILA
  COLIMA
  DURANGO
  GUANAJUATO
  GUERRERO
  HIDALGO
  JALISCO
  MEXICO
  MEXICO_CITY
  MICHOACAN
  MORELOS
  NAYARIT
  NUEVO_LEON
  OAXACA
  PUEBLA
  QUERETARO
  QUINTANA_ROO
  SAN_LUIS_POTOSI
  SINALOA
  SONORA
  TABASCO
  TAMAULIPAS
  TLAXCALA
  VERACRUZ
  YUCATAN
  ZACATECAS
}
